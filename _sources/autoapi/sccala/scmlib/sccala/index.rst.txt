sccala.scmlib.sccala
====================

.. py:module:: sccala.scmlib.sccala


Classes
-------

.. autoapisummary::

   sccala.scmlib.sccala.SccalaSCM


Module Contents
---------------

.. py:class:: SccalaSCM(file, calib='CALIB', blind=True, blindkey='HUBBLE')

   .. py:attribute:: blind
      :value: True



   .. py:attribute:: blindkey
      :value: 'HUBBLE'



   .. py:attribute:: sn


   .. py:attribute:: mag


   .. py:attribute:: mag_err


   .. py:attribute:: col


   .. py:attribute:: col_err


   .. py:attribute:: vel


   .. py:attribute:: vel_err


   .. py:attribute:: ae


   .. py:attribute:: ae_err


   .. py:attribute:: red


   .. py:attribute:: red_err


   .. py:attribute:: mag_sys


   .. py:attribute:: v_sys


   .. py:attribute:: c_sys


   .. py:attribute:: ae_sys


   .. py:attribute:: epoch


   .. py:attribute:: m_cut_nom


   .. py:attribute:: sig_cut_nom


   .. py:attribute:: datasets


   .. py:attribute:: posterior
      :value: None



   .. py:property:: red_uncertainty


   .. py:method:: get_error_matrix(classic=False, rho=1.0, rho_calib=0.0)


   .. py:method:: sample(model, log_dir='log_dir', chains=4, iters=1000, warmup=1000, rho=1.0, rho_calib=0.0, save_warmup=False, quiet=False, init=None, classic=False, output_dir=None, test_data=False, selection_effects=True, store_chains=True)

      Samples the posterior for the given data and model using
      the cmdstanpy interface.

      Parameters
      ----------
      model : SCM_Model
          Model for which to fit the data
      log_dir : str
          Directory in which to save sampling output. If None is passed,
          result will not be saved. Default: log_dir
      chains : int
          Number of chains used in STAN fit. Default: 4
      iters : int
          Number of iterations used in STAN fit. Default: 1000
      warmup : int
          Number of iterations used in STAN fit as warmup. Default: 1000
      rho : float
          Correlation between the color and magnitude uncertainties. Default: 1.0
      rho_calib : float
          Correlation between the color and magnitude uncertainties for calibrator SNe. Default: 0.0
      save_warmup : bool
          If True, warmup elements of chain will be saved as well. Default: False
      quiet : bool
          Enables/ disables output statements after sampling has
          finished. Default: False
      classic : bool
          Switches classic mode on if True. In classic mode, a/e input is
          ignored.
      output_dir : str
          Directory where temporary STAN files will be stored. Default: None
      test_data : bool
          If True, the normalisation of the data will be overwritten to account
          for the test data. For now the values can't be adjusted and are
          hardcoded to the defaults of the `gen_testdata` script.
          Default: False
      selection_effects : bool
          If True, selection effects are included in the model. Default: True
      store_chains : bool
          If True, sampling chains will be stored. Default: True

      Returns
      -------
      posterior : pandas DataFrame




   .. py:method:: bootstrap(model, output, log_dir='log_dir', chains=2, iters=1000, warmup=1000, rho=1.0, rho_calib=0.0, save_warmup=False, save_chains=False, init=None, classic=False, replacement=True, restart=True, walltime=24.0, output_dir=None, selection_effects=True)

      Samples the posterior for the given data and model

      Parameters
      ----------
      model : SCM_Model
          Model for which to fit the data
      output : str
          Name of the file where the resampled H0 values should be
          written to.
      log_dir : str
          Directory in which to save sampling output. If None is passed,
          result will not be saved. Default: log_dir
      chains : int
          Number of chains used in STAN fit. Default: 4
      iters : int
          Number of iterations used in STAN fit. Default: 1000
      warmup : int
          Number of iterations used in STAN fit as warmup. Default: 1000
      save_warmup : bool
          If True, warmup elements of chain will be saved as well. Default: False
      save_chains : bool
          If True, individual chains of each bootstrap step will be saved.
          WARNING: This will use huge amounts of disk space! Default: False
      classic : bool
          Switches classic mode on if True. In classic mode, a/e input is
          ignored.
      replacement : bool
          If True, bootstrap resampling will be done with replacement.
          Default: True
      restart : bool
          Enables writing of restart files. Can be disabled if disk space is a
          concern. Restart files will be written in the log_dir. Default: True
      time : float
          Wallclock time (in h) available. Once 95% of the available wallclock
          time is used, no new iteration will be started and job will exit
          cleanly. Should be used with restart set to True. Default 24.0
      output_dir : str
          Directory where temporary STAN files will be stored. Default: None
      selection_effects : bool
          If True, selection effects are included in the model. Default: True

      Returns
      -------
      bootstrap_h0 : list of float
          List containing 50th quantiles of each individual bootstrap step.



   .. py:method:: __save_samples__(df, log_dir='log_dir', norm=None, store_chains=True)

      Exports sample data



   .. py:method:: hubble_diagram(save=None, classic=False)

      Plots a Hubble diagram of the posterior

      Parameters
      ----------
      save : str
          Specified where the generated Hubble diagram will be saved.
      classic : bool
          Switches classic mode on if True. In classic mode, a/e input is
          ignored.

      Returns
      -------
      None

      Note: Only plots redshift vs. apparent magnitude to work for all
      models, i.e. H0 and H0-free models.



   .. py:method:: cornerplot(save=None, classic=False)

      Plots the cornerplot of the posterior

      Parameters
      ----------
      save : str
          Specified where the generated cornerplot will be saved.
      classic : bool
          Switches classic mode on if True. In classic mode, a/e input is
          ignored.

      Returns
      -------
      None



